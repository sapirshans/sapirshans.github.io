{"version":3,"sources":["components/navigation.js","components/header.js","components/footer.js","components/comingsoon.js","components/work.js","components/overview.js","components/post.js","components/about.js","components/content.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","$","this","active","addClass","notActive","removeClass","motion","div","id","initial","opacity","x","animate","transition","duration","delay","onClick","workHandler","className","aboutHandler","href","target","rel","aria-label","Component","Header","typed","Typed","el","strings","typeSpeed","backSpeed","destroy","h1","style","whiteSpace","ref","backHandler","activeNav","Footer","Work","projects","title","description","date","rendering","category","class","src","alt","url","proj","clickHandler","project_rows","class_title","split","join","class_cat","push","handleClick","project","comingSoonHandler","Post","React","About","Content","goToPost","bind","goToAbout","goToWork","state","pageDisplay","curr_proj","setState","content","App","i","useMotionValue","y","sign","Math","random","motionX","floor","motionY","midX","window","innerWidth","midY","innerHeight","moveX","useTransform","latest","moveY","svg_shapes","r","cx","cy","stroke","fills","fill","length","circle","strokeWidth","repeat","Infinity","repeatType","x1","y1","len","line","x2","y2","onMouseMove","event","rect","currentTarget","getBoundingClientRect","set","clientX","left","clientY","top","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99207d1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { motion } from \"framer-motion\";\nimport $ from \"jquery\";\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    $(\"#\" + this.props.active + \"-button\").addClass(\"active\");\n    var notActive = this.props.active == \"work\" ? \"about\" : \"work\";\n\n    $(\"#\" + notActive + \"-button\").removeClass(\"active\");\n\n    return (\n      <motion.div\n        id=\"nav\"\n        initial={{ opacity: 0, x: 200 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 1, delay: 0.75 }}\n      >\n        <h4\n          onClick={this.props.workHandler}\n          id=\"work-button\"\n          className=\"nav-element active\"\n        >\n          work\n        </h4>\n        <h4\n          onClick={this.props.aboutHandler}\n          className=\"nav-element\"\n          id=\"about-button\"\n        >\n          about\n        </h4>\n        <a\n          href=\"./public/sapirshansresume.pdf\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          aria-label=\"Download my resume!\"\n          className=\"nav-element\"\n          id=\"nav-element\"\n        >\n          <h4 className=\"nav-element\" id=\"resume-button\">\n            resume\n          </h4>\n        </a>\n      </motion.div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navigation from \"./navigation\";\nimport Typed from \"typed.js\";\nimport { motion } from \"framer-motion\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // typed code taken from: https://jsfiddle.net/mattboldt/ovat9jmp/\n  componentDidMount() {\n    const options = {\n      strings: [\"hello! welcome to my creative home...\"],\n      typeSpeed: 50,\n      backSpeed: 50,\n    };\n\n    this.typed = new Typed(this.el, options);\n  }\n\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n\n  render() {\n    return (\n      <header>\n        {/* <svg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 960 271.4\" height={100}><style dangerouslySetInnerHTML={{__html: \".st0{fill:none;stroke:#000;stroke-width:11;stroke-miterlimit:10}\" }} /><path id=\"XMLID_3_\" className=\"st0\" d=\"M763.7 197.7c-1.4-13.9 1.5-27.8.9-41.7-.6-13.9-6-29.1-18.4-35.3-10.6-5.3-23.4-2.8-34.5 1.3-15 5.5-29.2 13.5-44.7 17.1-15.6 3.6-33.8 1.7-44.7-10-1.5-1.6-3.1-3.6-5.3-3.9-2.4-.3-4.5 1.3-6.3 2.9-15 12.9-31 25.6-50.2 30.4-19.1 4.9-42.2-.3-52.7-17 13.7 2.1 28.4-2.4 38.5-12 5-4.8 9.1-11.2 8.7-18.2-.8-13-17.4-20-29.7-15.7-12.3 4.3-20.4 15.8-26.8 27.1-19.6 34.4-57.1 139-35.6 122.9 12.7-10.1 33.5-97.2 36.8-142.1-12 8.3-20.5 20.6-30.3 31.3s-22.5 20.5-37.1 20.8c-13.1.2-26.6-10.8-26.5-23.2 0-1.3-1.6-1.9-2.5-1-9.1 9-19.5 16.6-30.9 22.4-6.9 3.6-17.2 5.6-20.3-2.4-1.3-3.3-.6-7 1.5-9.8 13.7-18.7 26.1-32.3 61.1-30.8-29.9-2.5-62.5 36.8-87.8 56.4s-58.2 36.1-88.3 25.2c-12.7-4.6-24.7-22-37.8-13.9 1.7 17.8 24.1 14.7 37 10s22.4-16.4 27.1-29.3c4.7-12.9 5-27 3.8-40.7-.6-7.2-1.7-14.5-.3-21.6 1.4-7.1 5.8-14.1 12.7-16.2 6.9-2.1 15.8 2.8 15.8 10\" /><path id=\"XMLID_2_\" className=\"st0\" d=\"M619.8 67c-4.9-4-11.2-13.6-14.7-18.8-1.4-2.1-2.6-5-1-6.9 3.7 2.5 7.4 4.9 11.1 7.4 1.4.9 2.8 1.8 4.4 2.1 2.1.3 4.2-.7 5.9-1.8 3.8-2.4 7.1-5.6 10.9-8.1s8.6-4 12.9-2.7c6.5 14.4-16.3 34.4-24.7 44.1\" /></svg> */}\n        <motion.h1\n          id=\"title\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1 }}\n        >\n          SAPIR\n        </motion.h1>\n        <div className=\"type-wrap\">\n          <span\n            style={{ whiteSpace: \"pre\" }}\n            ref={(el) => {\n              this.el = el;\n            }}\n            id=\"subtitle\"\n          />\n        </div>\n        <Navigation\n          aboutHandler={this.props.aboutHandler}\n          workHandler={this.props.workHandler}\n          backHandler={this.backHandler}\n          active={this.props.activeNav}\n        ></Navigation>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          Shoot me an email at{\" \"}\n          <a\n            id=\"email\"\n            href=\"mailto:sapirshans@gmail.com\"\n            rel=\"noopener\"\n            aria-label=\"Email me!\"\n          >\n            sapirshans@gmail.com\n          </a>\n          !\n        </p>\n        <p>\n          For more check out:{\" \"}\n          <a\n            href=\"https://www.linkedin.com/in/sapir-shans/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            aria-label=\"Add me on LinkedIn!\"\n          >\n            linkedin\n          </a>\n          {\" | \"}\n          <a\n            href=\"https://medium.com/@sapirshans\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            aria-label=\"Follow me on Medium!\"\n          >\n            medium\n          </a>\n          {\" | \"}\n          <a\n            href=\"https://github.com/sapirshans\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            aria-label=\"Check out my Github!\"\n          >\n            github\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Work extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n        <div>\n          <p>Seems like this project is still under construction!</p>\n        </div>\n    )\n\n  }\n}\n\n","import React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport ComingSoon from \"./comingsoon\";\n\nexport default class Work extends Component {\n  projects = [\n    {\n      title: \"Daily UI\",\n      description:\n        \"Check out my other UI designs from the daily UI challenge on Dribble\",\n      date: \"\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"Spotify Tags\",\n      description:\n        \"As part of my Digital Product Design course, I explored ways to improve Spotify and came up with a tagging scheme.\",\n      date: \"August 2019 - December 2019\",\n      rendering: (\n        <div class=\"post-wrapper\">\n          <h2>Defining the Problem Space</h2>\n          <p>\n            After brainstorming many different potential problems I could tackle\n            within Spotify, I decided to focus on <em>music discovery</em>.\n            Spotify's discover section, although improving, is weak. It works,\n            but it could be a lot better. The whole point of the discover\n            section is to make it <em>easier</em> for the user to rummage\n            through the almost infinite number of existing songs there are in\n            the world so they could find the songs that they will like. There\n            are still many overwhelming things on the discover section, and in\n            addition many playlists have either repetitive artists or songs.\n          </p>\n          <h3>The People Problem</h3>\n          <p>\n            {\" \"}\n            After doing the five whys exercise, I came up with my initial people\n            problem.\n            <br />\n            <br />\n            <i>\n              When I look for new music, I want to be able to search for the\n              type of song I want to find, so I can save time looking.\n            </i>\n            <br />\n            <br /> But I can't do that well because:\n            <ul>\n              <li>There is a lot of music out there</li>\n              <li>\n                The current ways to search for music aren’t specific enough for\n                my needs\n              </li>\n            </ul>\n          </p>\n          <h2>Research</h2>\n          <p>\n            To look into this problem, I both conducted user research in person\n            and online through a survey and an interview, as well as market\n            research.\n          </p>\n          <h3>Results</h3>\n          <p>\n            What I found in my research was that people had{\" \"}\n            <em>mixed feelings</em> about discovering new music, but slightly\n            more people tied <em>negative words</em> to it than positive ones.\n            Additionally, the way people most often find music is a natural one\n            with less effort rather than a search-heavy one (possibly due to the\n            search-heavy one being very time consuming as they described prior).\n            Most people discover new music through the people around them\n            (including friends) or through things they do in their daily life\n            like listening to the radio while driving, or going to a party or\n            event, or going to a store and listening to the background music.\n            Another thing that stood out in my interviews was that people either\n            looked for new music from artists they already like or looked for\n            new songs that fit the playlist <em>mood</em> or <em>a rhythm</em>{\" \"}\n            that they like. The last thing that I wanted to point out that I did\n            not show above was that a big point of frustration for people was\n            not finding exactly what they liked. A lot of times people would say\n            recommendations from Spotify were{\" \"}\n            <em>close but not close enough</em> to what they wanted, or that\n            they already knew about it, or that they didn’t trust them.\n          </p>\n          <h3>Market Research</h3>\n          <p>\n            Some current apps that address the issue of discovering new music\n            are Pandora, Shazam, and SoundCloud. <br />\n            Pandora, similar to Spotify, recommends music to users based off of\n            an algorithm that learns based off of likes and dislikes of a song\n            to recommend new ones. Different to Spotify, users get\n            recommendations only while listening to a radio. This takes away the\n            burden of looking for music off the user, but Spotify does that too\n            with their algorithm as well. <br />\n            Shazam allows people to find the song they are listening to\n            currently. Similar to Spotify, it also allows people to search for\n            top charts and new songs, however those features are widely less\n            known and used. It enhances how people find music naturally in the\n            world, by enabling them to keep track of songs that they like.{\" \"}\n            <br />\n            SoundCloud allows people to search for music through playlists,\n            similar to Spotify. Its more catered towards creators and people who\n            are looking for smaller artists, since they have the appeal of\n            anyone being able to post a song.\n          </p>\n          <h3>Redefining the People Problem</h3>\n          <p>\n            <i>\n              People want to find new music, but they have a hard time looking\n              for new songs or artists through the immense amount of existing\n              music.\n            </i>\n          </p>\n          <h2>Ideating</h2>\n          <p>\n            Now that I had all this information, it was time to get creative and\n            problem solve!\n          </p>\n          <h3>Trends</h3>\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-trends.png\"}\n            alt=\"trends\"\n          />\n          <h3>Journey Map</h3>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-journey-map.png\"\n            }\n            alt=\"journey map\"\n          />\n          <h3>Brainstorming</h3>\n          <p>\n            In order to come up with many diverse ideas, I brainstormed with two\n            friends. They both have very different tastes in music and both use\n            Spotify to listen to music. After the HMW (How May We)’s some of the\n            restrictions in choosing Opportunity Areas were lack of visual\n            problems and more algorithm based problems (specifically in the\n            recommendations section). At the end of the brainstorming session,\n            we chose these 3 solution spaces because we either thought they were\n            very promising or interesting spaces. We thought the description and\n            identifying what you like about a song spaces would be good to\n            choose since we are dealing with a search problem. The social aspect\n            was to potentially mimic how people ‘discover’ songs out in the real\n            world.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-brainstorming.jpeg\"\n            }\n            alt=\"brainstorming\"\n          />\n          <h3>Evaluation</h3>\n          <p>\n            To evaluate all our ideas, I conducted a SWOT analysis as well as\n            weighed their feasibility vs. impact.\n          </p>\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-swot.png\"}\n            alt=\"SWOT analysis\"\n          />\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-feasibility.png\"\n            }\n            alt=\"feasibility vs. impact\"\n          />\n          <p>\n            Finally, I decided that <em>song tags</em> would be the best way to\n            go. It’s a great answer to the people problem because it finally\n            allows users to search for songs NOT based on the artist or song\n            name, but\n            <em>based on content</em>. It allows users to be more specific in\n            what they want by searching multiple tags at a time, as well as let\n            people look for songs that might not necessarily be in a playlist,\n            especially since the Spotify playlists are repetitive. It's better\n            than some of the other features we came up with because it\n            introduces a search-mechanism to Spotify that is{\" \"}\n            <em>content-based</em> rather than title-based.\n          </p>\n          <h2>Designing: Building the Feature</h2>\n          <p>\n            I chose the feature, but now I need to flesh it out and think of\n            what it will need and how it can be integrated into Spotify.\n          </p>\n          <h3>(Possible) Content Requirements: </h3>\n          <ul>\n            <li>\n              Following a Tag: People might want song updates of a specific type\n              of song\n            </li>\n            <li>\n              Using multiple tags: This would enable users to find something\n              really specific\n            </li>\n            <li>\n              Everything should be able to be tagged — whether that be song,\n              artist, or playlist — because right now users can only search from\n              the name of the content.\n            </li>\n            <li>\n              Tag recommendations: Users might not know what tags to look up\n            </li>\n            <li>\n              Tags should be clickable, if you click on a tag you are lead to\n              the ‘tag’ page\n            </li>\n            <li>Tag page</li>\n            <li>\n              Being able to play songs of a certain tag from your liked music\n              (or playlists?)\n            </li>\n          </ul>\n          <h3>Information Hierarchy</h3>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-info-hierarchy.png\"\n            }\n            alt=\"information hierarchy\"\n          />\n          <h3>Necessary Interactions</h3>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-interactions.png\"\n            }\n            alt=\"interactions\"\n          />\n          <h3>Medium Fidelity</h3>\n          <p>\n            I explored a couple options for where the tags would go and how a\n            user can get to them.\n          </p>\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-medfid1.png\"}\n            alt=\"mypic\"\n          />\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-medfid2.png\"}\n            alt=\"mypic\"\n          />\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-medfid3.png\"}\n            alt=\"mypic\"\n          />\n          <h2>Testing and Refining</h2>\n          <p>\n            The flows I chose to prototype were the listening entry point, as\n            well as the placeholder text underneath the search bar in the middle\n            search mechanism point. I wanted to test out a few key things: if\n            the user would be able to understand that the tags in the listening\n            page are links, how clear it was that there would be tags on that\n            page, and which placeholder text and description was better at\n            telling the user that they can search for multiple tags as well as\n            searching for songs and artists. So I came up with the following two\n            tasks for my tested users to do:\n            <ol>\n              <li>I want to look for electronic traditional music in Arabic</li>\n              <li>\n                I want to find songs similar to the one I am currently listening\n                to\n              </li>\n            </ol>\n            In all three of my tests, none of the users searched for multiple\n            tags — one searched for one or the other, and the other two searched\n            for the query in one tag linking the words together. I found that\n            the placeholder text helped people understand that tags required a\n            hashtag symbol in front of the search query, but did not help them\n            realize that they could search for multiple tags. It was not clear\n            that there would be tags on the listening page before seeing it, but\n            after seeing it, all of the users I tested figured out that you\n            could click on the tags (probably because you could click on the\n            artist already).\n          </p>\n          <h3>Iterations</h3>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-iterations1.png\"\n            }\n            alt=\"mypic\"\n          />\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/spotify-iterations2.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            The entry points remained the same because they felt natural to the\n            users, however I added a description for what the user could search\n            for to make the search mechanism more clear. To additionally make it\n            clear that the user could search for more than one tag, in the\n            listening entry point, I added the option to search for all of the\n            tags relevant to the song.\n          </p>\n          <p>\n            I also added tag adding to the end points to make it easier for the\n            user to add tags to their search and refine what they are looking\n            for. In the case of a search from the listening entry, it would be\n            other tags relevant to the song, but from the search bar it could\n            potentially be machine learning based on either what other users who\n            searched for this tag searched with it, or what tags the user tends\n            to listen to.\n          </p>\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/spotify-finalflow.png\"}\n            alt=\"mypic\"\n          />\n          <p>\n            The listening entry point was clear enough from the studies I\n            conducted, so I didn’t feel the need to change it. In addition, I\n            thought it was consistent with the current Spotify flow. The search\n            entry point, I added a description because that was unclear from the\n            research I conducted. In addition, to the last page I added a refine\n            your search section to make it easier for users to refine and get to\n            what they are searching for. I got rid of the two-page sorting, this\n            way the user gets to the results they want faster and in addition,\n            it is more natural to have the type selection on the top rather than\n            on the bottom.\n          </p>\n          <h3>More Iterations</h3>\n          <p>\n            Some problems that my current flow has are that it is not clear tags\n            can be pressed, and additionally, someone pointed out I should play\n            around with the search results because they don’t need to\n            necessarily be in list view. So I continued with explorations\n            specifically tackling these two problems.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/spotify-moreiterations1.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            This exploration improves the song discovery experience, testing out\n            if there are any methods better than list view.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/spotify-moreiterations2.png\"\n            }\n            alt=\"mypic\"\n          />\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/spotify-moreiterations3.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            This exploration tries to tackle the problem of multiple tags and\n            enabling the user to refine their search. Some were by emphasizing\n            that the tags are links, but the others are selectable (kind of like\n            refining a shopping search).\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/spotify-moreiterations4.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            This was the most important exploration I did, where I tried to come\n            up with ways to show that tags are clickable and interactive.\n          </p>\n\n          <h2>Visual Design</h2>\n          <h3>Setting Goals</h3>\n          <p>\n            The only thing that may be better solved by visual design is showing\n            that tags are clickable or links, however I think since Spotify\n            tends to use minimal colors (white, black, and green) using a new\n            color wouldn’t be fit, and Spotify green for symbols usually means\n            it’s toggle-able, and these are links. The links (album names and\n            artists) are currently not a different color.\n          </p>\n          <h3>Simplifying Elements</h3>\n          <p>\n            The added elements were the underlined texts for tags, which are\n            needed because tags need to be differentiated from other elements in\n            the sense that they are clickable and interactive. Another is the\n            sorting tab with songs, artists, playlists, and albums as that’s how\n            the new search structure will sort search queries so there needed to\n            have a way to show what tab the user is on (how it looks like active\n            vs inactive).\n          </p>\n          <h2>Putting it All Together</h2>\n          <ReactPlayer url=\"https://www.youtube.com/watch?v=wAdp4pb8lgY\" />\n          <h2>Room for Improvement</h2>\n          <p>\n            The goal of this project was to experience the entire design process\n            from start to finish. If I had more time on my hands, I would have\n            conducted <em>more user testing</em> in order to really get more\n            accurate results with regards to how to improve the user flow and\n            the visual design. I would have also <em>explored</em> more\n            iterations with respect to user flow and visual design. Especially\n            in regards to the tag page and the content requirements I came up\n            with. Finally, I didn't explore the artist-side user experience with\n            tags, or the question of <em>who tags items</em>. The next steps\n            would be to really delve deep into each content requirement and\n            analyze them individually. Finally, due to time-constraints I also\n            put together a quick prototype, but I would have added more examples\n            and animations to it to make it more seemless.\n          </p>\n        </div>\n      ),\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"Instagram Albums\",\n      description:\n        \"What at first was an exploration to cater to the travel niche on Instagram turned out to be a new feature idea centered around events.\",\n      date: \"August 2019 - September 2019\",\n      rendering: (\n        <div class=\"post-wrapper\">\n          <p>\n            One of the biggest things social media does right is enabling people\n            to share and remember life experiences and events, especially with\n            people who are far away. This is all too familiar to me, as the\n            majority of my communication with my family abroad is through social\n            media. Today, people take hundreds of pictures from a specific\n            event, and there’s no way to share them all (or most of them)\n            without either overwhelming your feed or having to access them one\n            by one by posting multiple pictures in one post.\n          </p>\n          <h2>Searching for Problems</h2>\n          <p>\n            I originally wanted to explore the travel niche on Instagram, but\n            after conducting some interviews with my friends and family,\n            although I didn’t get much information about the travel niche, I got\n            some information about personal Instagrams.\n            <ol>\n              <li>\n                <i>\n                  When I experience an event, I want to share my experiences, so\n                  I post on Instagram.\n                </i>\n              </li>\n              <li>\n                <i>\n                  When I experience an event, I want to remember my experiences,\n                  so I post on Instagram.\n                </i>\n              </li>\n            </ol>\n            So the two main reasons for people who use Instagram for personal\n            reasons is to <em>share</em> and to <em>remember</em>.\n            <br />\n            Instagram is a social media platform, and as such it enables us to\n            share things that are going on in our lives. It specifically does it\n            through images, allowing us to share snapshots of events happening\n            in our lives.\n            <br />\n            It’s true that remembering is really not the point of Instagram, but\n            it brings up an interesting point — what if I want only want certain\n            people to remember certain things? Meaning, I want to share my\n            travels with my mom who follows me (hi mom!), but not my drunken\n            college parties (sorry mom…). And this is why Instagram introduced\n            the close friends feature for stories, but could something similar\n            be done to feeds? Additionally, often people post a few highlights\n            of trips or events on their feeds (many times wanting not to\n            overwhelm their followers with posts), but what do I do if I want to\n            remember it all? Not just the highlights. What do I do if:\n            <br />\n            <i>\n              I don’t just want to remember one picture (one event or moment)\n              from every couple of days, rather I want to remember all of the\n              amazing 10 or 20 or even more pictures (or events or moments) I\n              have from that day?\n            </i>\n            <br />\n            And honestly, the same goes with sharing. What if you want to share\n            your whole memory with people who are interested? Or if you want to\n            categorize your posts, grouping together your posts from each year\n            of college?\n            <br />\n            To my surprise, I ran into a couple of people telling me that they\n            make private accounts and don’t let anyone follow them, just for\n            that reason! To put all their pictures in them from a certain event,\n            kind of like modern-day albums, so that they can go back and look at\n            them. So in addition to their main account, they would have\n            additional ones that are called something like: yaelsgraduation15,\n            meandbaeinrome18, and so on and so forth.\n            <br />\n          </p>\n          <p>\n            And my first reaction to that was <br />\n            <br />\n            <i>THAT’S A GREAT IDEA! I SHOULD START DOING THAT TOO!</i> <br />\n            <br />\n            But I'm a designer-- <br />\n            So my head took me in a different direction...\n          </p>\n          <p>\n            <i>\n              PROBLEM: When I have multiple pictures from an event or an\n              experience, I want to group them together in order to either\n              remember them better or make them more easier to share (whether to\n              only share with certain people, or to not overwhelm my feed with\n              posts), but I can’t do that well because there is no feature that\n              groups my posts.\n            </i>\n          </p>\n          <h2>Brainstorming Solutions</h2>\n          <p>\n            As I tried coming up with a number of different unique solutions\n            that solved the problem, I decided that the best one was similar to\n            the current existing solution: Insta-Albums. It would provide people\n            a way to share numerous photos, however it would offer them their\n            own space-- something that a post or story cannot do.\n          </p>\n          <h3>Insta-Albums-- What Exactly Are They?</h3>\n          <p>Now to flesh out the basic idea.</p>\n          <p>\n            <em>Basic Idea: </em>\n            Some sort of collections-like feature where the user can upload\n            images just like regular Instagram posts.\n            <br />\n            Now for some important questions to flesh out this concept:\n            <ul>\n              <li>What features should these albums include?</li>\n              <li>\n                How will the user access these Insta-albums? Where should they\n                fall in the current information hierarchy?\n              </li>\n              <li>How should the page or section look like?</li>\n            </ul>\n          </p>\n          <h3>What features should these albums include?</h3>\n          <p>\n            With the problem I identified in mind (people want to post multiple\n            photos of one event grouped together), I listed all potential\n            features weighed how much they made sense and crossed off the ones\n            that did not fit. I ended up with these:\n            <ul>\n              <li>Title</li>\n              <li>Description</li>\n              <li>Collaborators (and managing them)</li>\n              <li>\n                Posts: posts that are shared in your feed, and posts that aren’t\n              </li>\n              <li>Adding posts after the fact / Removing posts</li>\n              <li>Adding multiple pictures as different posts</li>\n              <li>Followers</li>\n              <li>Managing who can see your album</li>\n              <li>Album feed</li>\n            </ul>\n            Some ideas that I ended up cutting were having a forced\n            chronological order, which I originally thought was a good idea, but\n            then realized that if someone is potentially compiling pictures\n            after a period of time, they would want to be able to order them\n            accordingly. Another one was to have the collaborators and users who\n            can see the album one and the same, which I thought wouldn’t make\n            sense for cases of people sharing an experience with people who\n            weren’t there (like a vlog or something).\n          </p>\n          <h3>\n            How will the user access these Insta-albums? Where should they fall\n            in the current information hierarchy?\n          </h3>\n          <p>\n            I drew out the information hierarchy, and given the features I just\n            laid out, and the functionality of an album, I weighed the pros and\n            cons of putting it in different positions.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/instagram-info-hierarchy.jpeg\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            There are two current post types on Instagram — the o.g. regular\n            posts and stories, which can both be accessed from the main page.\n            Post types can be accessed in two ways — viewing/editing and adding.\n            What I’m proposing is essentially a new post type, similar to what\n            regular posts are, but not quite. This is why all the nodes that\n            connected to stories were out of the question, because they’d give\n            the wrong idea of what the functionality of the new post would be.\n            Stories are more of a live update, while albums are more of a\n            compilation device.\n          </p>\n          <p>\n            <em>Viewing</em>\n          </p>\n          <p>\n            It would make sense that, like the other post types, albums were\n            given a spot on the profile page. Similarly, they should also be\n            given a platform on the main page. In the case of the accounts page,\n            there are multiple locations it can be within it — underneath or\n            over where the stories are, on the bar with the account pictures, or\n            in the hamburger nav bar in the top right corner. This is how each\n            of those would look like, roughly (new feature is shown in red):\n          </p>\n          <div class=\"flex-row\">\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"post-content/instagram-profile-pos-1.png\"\n              }\n              alt=\"mypic\"\n            />\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"post-content/instagram-profile-pos-2.png\"\n              }\n              alt=\"mypic\"\n            />\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"post-content/instagram-profile-pos-3.png\"\n              }\n              alt=\"mypic\"\n            />\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"post-content/instagram-profile-pos-4.png\"\n              }\n              alt=\"mypic\"\n            />\n          </div>\n          <p>\n            After reviewing these wireframes, I’ve decided to go with the first\n            one — to place the new feature in the bar with account pictures.\n            Next to the stories it looks too cluttered and feels like it should\n            open up a pop-up, similar to the stories. In the hamburger nav, it\n            feels more like a personal setting, which would make it unfit to\n            potentially share, but on the bar, it feels like it should be part\n            of the sharing experience of Instagram as well as an element of the\n            account, as are the rest of the buttons in that bar.\n          </p>\n          <p>\n            In the case of the main page, there are also multiple options for\n            location — it can be on the top bar, over or under the stories bar,\n            or integrated with the main feed. It wouldn’t make sense for it to\n            be on the top bar since none of the top bar buttons (add to story,\n            tv, and DMs) have anything to do with this new feature. I sketched\n            out wireframes for the latter two and listed what each would imply.\n          </p>\n          <img\n            src={process.env.PUBLIC_URL + \"post-content/instagram-main-pos.png\"}\n            alt=\"mypic\"\n          />\n          <p>\n            I ended up deciding on the second wireframe where in place of the\n            profile name would be the album name, since it makes albums similar\n            to posts as well as makes the album the focus. But that still leaves\n            the questions of where the add feature would be.\n          </p>\n          <p>\n            <em>Adding</em>\n          </p>\n          <p>\n            As I discussed earlier, since stories were out of the question, the\n            only nodes left were either conjoined with posts or their own\n            separate thing. A potential problem with the first option was that\n            it could potentially take away from the regular posts feature, as\n            each time you’d make a post, you would have to choose if it was\n            either a post or an album, however, the problem with the latter\n            option was finding a place to put it that is not too confusing. I\n            looked to Facebook albums for advice. Facebook albums have two\n            methods of adding an album, through posts (on the main page) and\n            through the albums page. Inspired by this I thought that when\n            creating a post, you should have the option to add it to an album,\n            existing or non-existing and when you open the albums page, you\n            should have the option to create an album. So in a sense, it should\n            both be joined to adding a post, but also be its own thing. I\n            sketched some wireframes of this as well to decide where in the flow\n            of creating a regular post it should go, but because I haven’t\n            designed the albums page yet, I tabled the second add feature for\n            later.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/instagram-album-creation.jpeg\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            I decided upon the third section of wireframes where the user can\n            select the album where he or she would select the location, and, in\n            addition, the user would be able to convert a multiple photos post\n            to individual album posts.\n          </p>\n          <p>\n            <em>How should the section and pages look like?</em>\n          </p>\n          <p>\n            For the section section (no pun intended), I decided to draw\n            inspiration from the existing feed, collection, and Facebook Albums.\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/instagram-section-inspo.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            They are all similar in the sense that they use a grid format,\n            although both collections and Facebook albums use 2 columns instead\n            of the 3 column format that the feed uses. Additionally, both the\n            Facebook albums and collections have titles on their display page —\n            so it would make sense that they use 2 columns instead of 3 so that\n            the title texts don’t have to be so small. The differences between\n            the two are that the Facebook albums include the number of posts,\n            while collections omits them, the add buttons are in different\n            places, and collections has all posts, while Facebook albums don’t.\n            The solution that would make the most sense is having the\n            collections and Facebook albums grid in the layout of a user profile\n            like so:\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/instagram-section-wireframe.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            I considered replacing the post add button with the create an album\n            button, but I thought the replacement would be too unclear and\n            confusing for users.\n          </p>\n          <p>\n            Now that we have the section laid out— what will the Insta-album\n            page itself look like? <br />\n          </p>\n          <p>\n            In order to answer this question, I first analyzed what content the\n            page will hold.\n            <ul>\n              <li>\n                The page holds the album, so the initial page must contain a\n                presentation of the album. That is the main content. (This part\n                is taken care of)\n              </li>\n              <li>\n                The albums hold the posts, so there must be some way to get to\n                them.\n              </li>\n              <li>\n                And the posts should function just as any other Instagram post.\n              </li>\n            </ul>\n            Kind of like babushka dolls:\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/instagram-babushkas.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            Taking all things into consideration I started brainstorming and\n            creating sketches of what potential Insta-album pages could look\n            like. I decided upon this configuration:\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL + \"post-content/instagram-album-page.png\"\n            }\n            alt=\"mypic\"\n          />\n          <p>\n            Similar to a user profile, I figured it should be a header with a\n            grid too. In addition, I thought it would be a good idea to let the\n            user be able to add a little description of the album if they wanted\n            to, similar to a profile bio. There shouldn’t be a profile picture,\n            because the album itself is filled with pictures. So really there\n            should only be a description at the top. I kept the bar with\n            different ways to display the posts — grid view, feed view, but\n            tagged wouldn’t be needed since it is an album and not a person. I\n            also kept the bottom bar since both saved and the profile had it.\n          </p>\n          <h2>Final Feature</h2>\n          <p>\n            Although the Album page itself changed a little bit from its\n            wireframe iteration, after realizing that it would fit better if it\n            looked more like something that already existed within Instagram,\n            this was the final product:\n          </p>\n          <img\n            src={\n              process.env.PUBLIC_URL +\n              \"post-content/instagram-albums-final.jpeg\"\n            }\n            alt=\"mypic\"\n          />\n          <h2>Reflection</h2>\n          <p>\n            One thing I could have done to improve the solution was to conduct\n            user testing, something that I neglected due to time constraints and\n            wanting to practice iterations and wireframing. I'm overall really\n            happy with the end high-fidelity mockups. I put a lot of work into\n            them and felt that I really improved my ability to work within an\n            existing branding scheme.\n          </p>\n        </div>\n      ),\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"LingUp\",\n      description: \"How do we get more people to learn a new language?\",\n      date: \"\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"HopIt\",\n      description: \"\",\n      date: \"\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"Visual Design\",\n    },\n    {\n      title: \"Artist&Title\",\n      description: \"\",\n      date: \"\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"Visual Design\",\n    },\n    {\n      title: \"Addictiveness Project\",\n      description:\n        \"As part of my Psychology of Computer Graphics course I explored the question 'What makes us addicted to apps?'\",\n      date: \"August 2019 - December 2019\",\n      rendering: (\n        // <div class=\"post-wrapper\">\n        //   <p>\n        //     Get on Tiktok at 7PM. What seems to be a second later, you look back\n        //     at the time. It's midnight. Most of us are familiar with this\n        //     phenomenon, whether it be Tiktok or any other social media. But app\n        //     addiction exhibits itself in many ways. According to thenextweb.com,\n        //     \"The average user peeks at their smartphone about 110 times a day,\n        //     and according to mobile analytics provider Flurry, more than 176\n        //     million users world-wide access apps on their device more than 60\n        //     times a day.\"\n        //   </p>\n        //   <h2>So what makes us so addicted to these apps?</h2>\n        //   <p>I did some research and here's what I found:</p>\n        //   <ul>\n\n        //   </ul>\n        // </div>\n        <ComingSoon></ComingSoon>\n      ),\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"Office Hours App\",\n      description: \"\",\n      date: \"\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"User Experience Design\",\n    },\n    {\n      title: \"Play Among the Michelin Stars\",\n      description:\n        \"Data visualization exploring Michelin star restaurants across the globe.\",\n      date: \"April 2021\",\n      rendering: <ComingSoon></ComingSoon>,\n      category: \"Data Visualization\",\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick(proj) {\n    this.props.clickHandler(proj);\n  }\n\n  render() {\n    const project_titles_render = [];\n    const project_categories_render = [];\n    const project_rows = [];\n\n    for (let proj of this.projects) {\n      // var class_name =\n      //   \"project-title \" + \"title-\" + proj.category.split(\" \").join(\"\");\n      // project_titles_render.push(\n      //   <a\n      //     className={class_name}\n      //     onClick={() => this.handleClick(proj)}\n      //     project={proj}\n      //     comingSoonHandler={this.props.comingSoonHandler}\n      //   >\n      //     {proj.title}\n      //   </a>\n      // );\n      // var class_name = \"project-category \" + proj.category.split(\" \").join(\"\");\n      // project_categories_render.push(\n      //   <a className={class_name}>{proj.category}</a>\n      // );\n\n      var class_title =\n        \"project-title \" + \"title-\" + proj.category.split(\" \").join(\"\");\n\n      var class_cat = \"project-category \" + proj.category.split(\" \").join(\"\");\n      project_rows.push(\n        <div className=\"project-row\">\n          <span className=\"project-span\">\n            <a\n              className={class_title}\n              onClick={() => this.handleClick(proj)}\n              project={proj}\n              comingSoonHandler={this.props.comingSoonHandler}\n            >\n              {proj.title}\n            </a>\n          </span>\n          <span className=\"project-span\">\n            <a className={class_cat}>{proj.category}</a>\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      // <div id=\"projects-container\">\n      //   <div className=\"projects-titles\">{project_titles_render}</div>\n      //   <div className=\"projects-categories\">{project_categories_render}</div>\n      // </div>\n      <div id=\"projects-container\">{project_rows}</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n//APP\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render() {\n    return (\n    <div className=\"overview-container\">\n      <h1>{this.props.title}</h1>\n      <p>{this.props.description} <br />\n      <em>dates: </em>{this.props.date} <br/>\n      <em>category: </em>{this.props.category}</p>\n    </div>\n  )};\n}","import React, { Component } from 'react';\nimport Overview from './overview';\n\n//APP\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n    <div className=\"post-container\">\n      <Overview title={this.props.title} \n                description={this.props.description} \n                date={this.props.date}\n                category={this.props.category}>         \n      </Overview>\n      <hr />\n      {this.props.rendering}\n    </div>\n  )};\n}","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div id=\"about\">\n        <div id=\"about-text\">\n          <img\n            src={process.env.PUBLIC_URL + \"about-profile.jpeg\"}\n            alt=\"this was supposed to be a picture of me, but enjoy this joke instead: \"\n            id=\"about-photo\"\n          />\n          <p>\n            <span id=\"hello\">{\"👋 \"}Hey!</span> My name's Sapir and I'm a\n            world-class <em>problem-solver</em>. <br />\n          </p>\n          <br />\n          <p class=\"about-text\">\n            Ever since I can remember myself, one of my greatest passions is to\n            come up and implement <em>effective solutions</em>. I believe that\n            good design begins at the root of the problem and grows from there\n            to serve its purpose. This principle is applicable to different\n            areas. From <em>UX design</em> to <em>programming</em> to{\" \"}\n            <em>branding</em>, any solution must be simple and effective.\n          </p>\n          <p>\n            With experience in classical graphic visual design, user experience\n            design, computer science, market strategy, and product design, I am\n            able to look at a problem with multiple perspectives. My passion and\n            curiousity fuel my hard-work ethic and creativity in these\n            respective fields.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport Work from \"./work\";\nimport Post from \"./post\";\nimport About from \"./about\";\nimport $ from \"jquery\";\nimport { motion } from \"framer-motion\";\n\nexport default class Content extends Component {\n  constructor(props) {\n    super(props);\n    this.goToPost = this.goToPost.bind(this);\n    this.goToAbout = this.goToAbout.bind(this);\n    this.goToWork = this.goToWork.bind(this);\n    this.state = { pageDisplay: \"work\", curr_proj: null };\n  }\n\n  goToPost(proj) {\n    this.setState({ curr_proj: proj });\n    this.setState({ pageDisplay: \"post\" });\n  }\n\n  goToAbout() {\n    this.setState({ pageDisplay: \"about\" });\n  }\n\n  goToWork() {\n    this.setState({ pageDisplay: \"work\" });\n  }\n\n  render() {\n    let content;\n    if (this.state.pageDisplay == \"work\") {\n      content = <Work clickHandler={this.goToPost}></Work>;\n    } else if (this.state.pageDisplay == \"post\") {\n      content = (\n        <Post\n          title={this.state.curr_proj.title}\n          description={this.state.curr_proj.description}\n          rendering={this.state.curr_proj.rendering}\n          date={this.state.curr_proj.date}\n          category={this.state.curr_proj.category}\n        ></Post>\n      );\n    } else if (this.state.pageDisplay == \"about\") {\n      content = <About></About>;\n    }\n\n    return (\n      <div>\n        <Header\n          aboutHandler={this.goToAbout}\n          workHandler={this.goToWork}\n          activeNav={this.state.pageDisplay}\n        ></Header>\n        <motion.div\n          className=\"content\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1 }}\n        >\n          <div className=\"content-bg\">{content}</div>\n        </motion.div>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Content from \"./components/content\";\n// import Navigation from './components/navigation';\nimport { motion, useMotionValue, useTransform } from \"framer-motion\";\nimport $ from \"jquery\";\n\n//APP\nfunction App() {\n  // THIS IS FOR THE MOVING BG\n  const x = useMotionValue(200);\n  const y = useMotionValue(200);\n\n  const speed = 25;\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const motionX = (Math.floor(Math.random() * speed) + 1) * sign;\n  const motionY = (Math.floor(Math.random() * speed) + 1) * sign;\n\n  const midX = $(window).innerWidth() / 2;\n  const midY = $(window).innerHeight() / 2;\n\n  var moveX = useTransform(x, (latest) => 20 * ((midX - latest) / midX));\n  var moveY = useTransform(y, (latest) => 20 * ((midY - latest) / midY));\n\n  function handleMouse(event) {\n    const rect = event.currentTarget.getBoundingClientRect();\n\n    x.set(event.clientX - rect.left);\n    y.set(event.clientY - rect.top);\n  }\n\n  var svg_shapes = [];\n  var i;\n\n  for (i = 0; i < 18; i++) {\n    var r = Math.floor(Math.random() * 17) + 1; // radii between 1 and 10\n    var cx = Math.floor(Math.random() * $(window).innerWidth()); // get random point\n    var cy = Math.floor(Math.random() * $(window).innerHeight());\n    var stroke = Math.floor(Math.random() * 2) + 1; // stroke width between 1 and 3\n\n    var fills = [\"None\", \"rgb(0,0,0,.5)\"];\n    var fill = fills[Math.floor(Math.random() * fills.length)];\n\n    svg_shapes.push(\n      <motion.circle\n        r={r}\n        cx={cx}\n        cy={cy}\n        fill={fill}\n        stroke={fill == \"None\" ? \"rgb(0,0,0,0.5)\" : \"None\"}\n        strokeWidth={stroke}\n        initial={{ cx: cx, cy: cy }}\n        animate={{ cx: cx + motionX, cy: cy + motionY }}\n        transition={{ repeat: Infinity, repeatType: \"mirror\", duration: 2 }}\n        style={{\n          x: moveX,\n          y: moveY,\n        }}\n      ></motion.circle>\n    );\n\n    var x1 = Math.floor(Math.random() * $(window).innerWidth());\n    var y1 = Math.floor(Math.random() * $(window).innerHeight());\n    var len = Math.floor(Math.random() * 7) + 7;\n\n    svg_shapes.push(\n      <g>\n        <motion.line\n          x1={x1}\n          x2={x1 + len}\n          y1={y1}\n          y2={y1}\n          stroke=\"rgb(0,0,0,.5)\"\n          initial={{ x1: x1, x2: x1 + len, y1: y1, y2: y1 }}\n          animate={{\n            x1: x1 + motionX,\n            x2: x1 + len + motionX,\n            y1: y1 + motionY,\n            y2: y1 + motionY,\n          }}\n          transition={{ repeat: Infinity, repeatType: \"mirror\", duration: 2 }}\n          style={{\n            x: moveX,\n            y: moveY,\n          }}\n        ></motion.line>\n        <motion.line\n          x1={(x1 * 2 + len) / 2}\n          x2={(x1 * 2 + len) / 2}\n          y1={len / 2 + y1}\n          y2={y1 - len / 2}\n          stroke=\"rgb(0,0,0,.5)\"\n          initial={{\n            x1: (x1 * 2 + len) / 2,\n            x2: (x1 * 2 + len) / 2,\n            y1: len / 2 + y1,\n            y2: y1 - len / 2,\n          }}\n          animate={{\n            x1: (x1 * 2 + len) / 2 + motionX,\n            x2: (x1 * 2 + len) / 2 + motionX,\n            y1: len / 2 + y1 + motionY,\n            y2: y1 - len / 2 + motionY,\n          }}\n          transition={{ repeat: Infinity, repeatType: \"mirror\", duration: 2 }}\n          style={{\n            x: moveX,\n            y: moveY,\n          }}\n        ></motion.line>\n      </g>\n    );\n  }\n\n  return (\n    <div onMouseMove={handleMouse}>\n      <script src=\"jquery-3.5.1.min.js\"></script>\n      <svg width=\"100%\" height=\"100%\">\n        {svg_shapes}\n      </svg>\n      <Content></Content>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}